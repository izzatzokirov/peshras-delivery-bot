from flask import Flask, request, jsonify
import requests
import logging
from datetime import datetime
import time

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

app = Flask(__name__)

# –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø
BOT_TOKEN = "8338994662:AAH7FALz3qd3F9dzcPadCVQY6CRPBXtFxiA"
CHANNEL_ID = "-1002967095913"

# –î–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
processed_orders = {}

def convert_unix_time(unix_time):
    """–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º Unix –≤—Ä–µ–º—è –≤ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–µ"""
    try:
        return datetime.fromtimestamp(int(unix_time)).strftime('%Y-%m-%d %H:%M:%S')
    except:
        return "–í—Ä–µ–º—è –Ω–µ —É–∫–∞–∑–∞–Ω–æ"

def send_to_telegram(order_data):
    try:
        order_num = order_data.get('order_num', 'N/A')
        
        # –ó–∞—â–∏—Ç–∞ –æ—Ç –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
        current_time = time.time()
        if order_num in processed_orders:
            if current_time - processed_orders[order_num] < 300:
                logger.warning(f"‚ö†Ô∏è –î—É–±–ª–∏–∫–∞—Ç –∑–∞–∫–∞–∑–∞ #{order_num} - –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º")
                return True
        
        processed_orders[order_num] = current_time
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º
        message = f"üõí –ó–∞–∫–∞–∑ #{order_num}\n\n"
        
        # –¢–æ–≤–∞—Ä—ã
        if 'line' in order_data and isinstance(order_data['line'], list):
            for i, item in enumerate(order_data['line'], 1):
                if item.get('order_line_type_id') == 1:
                    name = item.get('order_line_name', '–¢–æ–≤–∞—Ä')
                    quantity = item.get('order_line_quantity', 1)
                    art = item.get('order_line_art_number', '–±–µ–∑ –∞—Ä—Ç–∏–∫—É–ª–∞')
                    message += f"{i}. {name} {quantity}—à—Ç. –∞—Ä—Ç {art}\n"
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ
        payment_method = order_data.get('payment_name', '–ù–∞–ª–∏—á–Ω—ã–µ')
        message += f"\nüí∞ –°—É–º–º–∞: {order_data.get('order_sum', 0)} —Å–æ–º–æ–Ω–∏"
        message += f"\nüí≥ –û–ø–ª–∞—Ç–∞: {payment_method}"
        
        phone = order_data.get('order_phone', '')
        if phone:
            message += f"\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: <a href=\"tel:{phone}\">{phone}</a>"
        
        message += f"\nüë§ –ò–º—è: {order_data.get('order_person', 'N/A')}"
        message += f"\nüè† –ê–¥—Ä–µ—Å: {order_data.get('order_address', 'N/A')}"
        
        # –ò–°–ü–†–ê–í–õ–ï–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Ä–µ–º—è –∏–∑ –∑–∞–∫–∞–∑–∞ Storelend
        order_time = order_data.get('order_time', '')
        if order_time:
            message += f"\n‚è∞ –í—Ä–µ–º—è: {convert_unix_time(order_time)}"
        else:
            message += f"\n‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}"
        
        comment = order_data.get('order_comment', '')
        if comment:
            message += f"\nüí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {comment}"

        # –ü–†–û–°–¢–´–ï –†–ê–ë–û–ß–ò–ï –ö–ù–û–ü–ö–ò-–°–°–´–õ–ö–ò
        keyboard = {
            "inline_keyboard": [
                [
                    {
                        "text": "‚úÖ –ü—Ä–∏–Ω—è–ª", 
                        "url": f"https://t.me/share/url?text=‚úÖ –ü—Ä–∏–Ω—è–ª –∑–∞–∫–∞–∑ {order_num} (Peshras)"
                    },
                    {
                        "text": "üöó –í –ø—É—Ç–∏", 
                        "url": f"https://t.me/share/url?text=üöó –í –ø—É—Ç–∏ —Å –∑–∞–∫–∞–∑–æ–º {order_num} (Peshras)"
                    }
                ],
                [
                    {
                        "text": "‚úÖ –î–æ—Å—Ç–∞–≤–ª–µ–Ω", 
                        "url": f"https://t.me/share/url?text=‚úÖ –î–æ—Å—Ç–∞–≤–∏–ª –∑–∞–∫–∞–∑ {order_num} (Peshras)"
                    }
                ]
            ]
        }

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
        payload = {
            "chat_id": CHANNEL_ID,
            "text": message,
            "parse_mode": "HTML",
            "reply_markup": keyboard,
            "disable_web_page_preview": True
        }
        
        response = requests.post(url, json=payload, timeout=10)
        return response.status_code == 200
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")
        return False

@app.route('/webhook', methods=['POST'])
def webhook():
    try:
        logger.info("üì® –ü–æ–ª—É—á–µ–Ω –∑–∞–∫–∞–∑ –æ—Ç storelend.ru")
        
        order_data_str = request.form.get('order_data')
        if not order_data_str:
            return jsonify({"status": "error", "message": "No order_data"}), 400
        
        import json
        order_data = json.loads(order_data_str)
        
        # –õ–æ–≥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        logger.info(f"üì¶ –î–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞: {order_data}")
        
        success = send_to_telegram(order_data)
        
        if success:
            return jsonify({"status": "success"})
        else:
            return jsonify({"status": "error"}), 500
            
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return jsonify({"status": "error"}), 400

@app.route('/')
def home():
    return "Peshras Delivery Bot is running! –ö–Ω–æ–ø–∫–∏-—Å—Å—ã–ª–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç!"

if __name__ == '__main__':
    logger.info("‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω —Å —Ä–∞–±–æ—á–∏–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏-—Å—Å—ã–ª–∫–∞–º–∏!")
    app.run(host='0.0.0.0', port=5000)
