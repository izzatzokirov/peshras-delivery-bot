from flask import Flask, request, jsonify
import requests
import os
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

app = Flask(__name__)

# –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø - –í–ê–®–ò –î–ê–ù–ù–´–ï
BOT_TOKEN = "8338994662:AAH7FALz3qd3F9dzcPadCVQY6CRPBXtFxiA"
CHANNEL_ID = "-1002108941132"

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
def send_to_telegram(message):
    try:
        url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
        payload = {
            "chat_id": CHANNEL_ID,
            "text": message,
            "parse_mode": "HTML"
        }
        response = requests.post(url, json=payload)
        return response.status_code == 200
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: {e}")
        return False

# Webhook –¥–ª—è –ø—Ä–∏–µ–º–∞ –∑–∞–∫–∞–∑–æ–≤
@app.route('/webhook', methods=['POST'])
def webhook():
    try:
        logger.info("üì® –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –æ—Ç storelend")
        
        # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö
        order_data = {}
        
        # 1. –ü—Ä–æ–±—É–µ–º JSON
        try:
            data = request.get_json()
            if data and isinstance(data, dict):
                if 'order_data' in data:
                    order_data = data['order_data']
                    logger.info("‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON —Å order_data")
                else:
                    order_data = data
                    logger.info("‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã –∫–∞–∫ –ø—Ä—è–º–æ–π JSON")
        except:
            pass
        
        # 2. –ü—Ä–æ–±—É–µ–º form-data
        if not order_data:
            try:
                order_data_str = request.form.get('order_data')
                if order_data_str:
                    import json
                    order_data = json.loads(order_data_str)
                    logger.info("‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã –∫–∞–∫ form-data")
            except:
                pass
        
        # –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã
        if not order_data:
            raw_data = request.get_data(as_text=True)
            logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –¥–∞–Ω–Ω—ã–µ. –°—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ: {raw_data}")
            return jsonify({"status": "error", "message": "Invalid data format"}), 400
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram
        message = f"üõí <b>–ù–û–í–´–ô –ó–ê–ö–ê–ó</b> #{order_data.get('id', 'N/A')}\n"
        message += f"üë§ <b>–ò–º—è:</b> {order_data.get('customer_name', 'N/A')}\n"
        message += f"üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {order_data.get('customer_phone', 'N/A')}\n"
        message += f"üè† <b>–ê–¥—Ä–µ—Å:</b> {order_data.get('customer_address', 'N/A')}\n\n"
        
        message += "üì¶ <b>–°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞:</b>\n"
        items = order_data.get('items', [])
        if isinstance(items, list):
            for item in items:
                message += f"‚Ä¢ {item.get('name', '–¢–æ–≤–∞—Ä')} x {item.get('quantity', 1)} - {item.get('price', 0)} —Å–æ–º–æ–Ω–∏\n"
        else:
            message += "‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–∞—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞\n"
        
        message += f"\nüíµ <b>–°—É–º–º–∞:</b> {order_data.get('total_amount', 0)} —Å–æ–º–æ–Ω–∏\n"
        message += f"‚è∞ <b>–í—Ä–µ–º—è:</b> {order_data.get('order_time', 'N/A')}\n\n"
        
        message += "‚ö° <i>–ö—É—Ä—å–µ—Ä—ã: –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —á—Ç–æ–±—ã –≤–∑—è—Ç—å –∑–∞–∫–∞–∑</i>"
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram
        success = send_to_telegram(message)
        
        if success:
            logger.info("‚úÖ –ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Telegram")
            return jsonify({"status": "success", "message": "Order processed"})
        else:
            logger.error("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram")
            return jsonify({"status": "error", "message": "Telegram send failed"}), 500
            
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook: {e}")
        return jsonify({"status": "error", "message": str(e)}), 400

# –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞
@app.route('/')
def home():
    return "Peshras Delivery Bot is running!"

if __name__ == '__main__':
    logger.info("üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω!")
    app.run(host='0.0.0.0', port=5000, debug=False)
